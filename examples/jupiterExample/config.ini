[USER]
# INPUT FILE PARAMETERS
# Temperature .csv file. 
# Use this line if you only have one temperature map.
lowTemps = jupiterFisher400mbar1996.csv

# "high" temperature .csv file. 
# Use above line for "low" temps when calculating a mean.
highTemps = 

# Wind profile .csv file.
wind = jupiterPorcoWinds.csv



# PLANET PARAMETERS
# Planet of interest
planet = jupiter

# Planet rotation rate, in  rad/s
omega = 0.000176

# Planet specific gas constant R, in J/kg*K
R = 3745

# Planet specific heat at constant pressure cp, in J/kg*K
cp = 12359

# Planet equatorial radius, in m
re = 71492000

# Planet polar radius, in m
rp = 66854000

# Planet mass, in kg
M = 1898130000000000000000000000


# Planet J2, the 2nd zonal harmonic coeff. 
J2 = 0.014736



# MODEL PARAMETERS
# Set pressure bounds, in bar, and amount of steps. 
# Steps will be done logarithmicly between the bounds.
p_0     = .4
pFinal  = 100
pSteps  = 1000

# Set latitude range, in degrees, and amount of steps.
phiStart =  -89.0
phiStop  =   89.0
phiSteps =  180

# Set assumed constant BV frequency, in 1/s, for temperature extrapolation.
bvFreq = 0.0025

# Set a tuning parameter to "turn off" the coriolis parameter near the equator in the TWE.
# A lower value = less horizontal temperature gradient near the equator. Low enough values
# (~ <1) start removing ALL temp variation, and high leave the equator to "blow up".
eqTuning = 2

# Choose if you're running with a single temperature array or calculating a mean.
# Options are single or mean.
tempType = single

# Adjustment parameters for the temperature array.
# We want variations to dampen out to the average as we reach our bottom pressure. 
# Achieve this with the tanh smoothing function. 
# Keep tuning low, as this function approaches 1 but does not reach it. 
# Limit for no diff. is somewhere around tuning = 3.0. 
# Moving the intersect lower in the atmosphere will also cause 
# cloud-top temp variation to propogate deeper. intersectDepth is the number
# of pressure steps below the midpoint the temperature begins to smooth.
intersectDepth = 0
tuning = 400

# Adjustment parameters for the Savitzky-Golay filter to be used on output winds.
# Smoothes noisy output. windowLength controls the length of the filter window,
# values ~11 maintain shape of input winds but this is dependant on the chosen
# phiSteps. windowLength must be odd. polyOrder is the order of polynomial used to # fit the samples. Values ~5 do a good job of matching the shape of the input 
# winds without over fitting the data. polyOrder must be less than windowLength.
# Flag to perform the S-V filter.
svFilter = True
windowLength = 11
polyOrder = 5



# PLOTTING PARAMETERS
# Flag to plot input temperature profile.
plotInputTemps = True

# Flag to plot input wind profile.
plotInputWind = True

# Flag to plot 2D temperature results.
plot2DTemps = True

# Flag to plot 2D density results.
plot2DDensity = True

# Flag to plot 2D wind results.
plot2DWind = True

# Flag to plot 1D wind profiles at various depths.
plotWindProfiles = True

# Step size to plot every <plot1DStepSize> 1D wind profiles for above plot.
plot1DStepSize = 100

# Plotting DPI.
dpi = 600

# Flag to save plots.
savePlots = True



# RESULTS PARAMETERS
# Flag to save results to .csv files.
saveData = True